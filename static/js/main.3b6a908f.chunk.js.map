{"version":3,"sources":["pages/Main/Main.module.scss","components/CardCity/CardCity.module.scss","pages/Forecast/Forecast.module.scss","components/Header/Header.module.scss","pages/Statistics/Statistics.module.scss","pages/Settings/Settings.module.scss","components/Drawer/Drawer.module.scss","components/Drawer/index.jsx","components/CardCity/index.jsx","components/Header/index.jsx","components/CurrentWeatherCard/index.jsx","pages/Main/index.jsx","pages/Forecast/index.jsx","pages/Statistics/index.jsx","pages/Settings/index.jsx","App.jsx","index.js","components/CurrentWeatherCard/CurrentWeatherCard.module.scss"],"names":["module","exports","Drawer","currentWeather","currentDate","currentTime","className","styles","drawer","drawerHeader","to","class","drawerBody","drawerCurrentCard","wrapper","cardHeader","weather","src","icon","alt","cardHeaderText","container","currentTemp","main","temp","toFixed","currentCity","name","currentState","sys","country","currentHumidity","humidity","progressHumidity","style","width","currentVisibility","clouds","all","progressVisibility","currentWind","wind","speed","type","color","height","CardCity","title","titleEn","imageUrl","activeC","isActive","changeActiveCityMain","changeActiveCity","useState","active","setActive","card","onClick","toggleActive","headerImg","time","cityName","Header","headerContainer","mainText","window","open","asideText","CurrentWeatherCard","angle","getTimeFromUnixTimestamp","unix","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","substring","length","leftSide","humidityContainer","cloudsContainer","progressClouds","visibilityContainer","Math","floor","visibility","windContainer","directionContainer","deg","round","rightSide","appTemp","feels_like","sunriseContainer","sunrise","sunsetContainer","sunset","pressureContainer","pressure","Main","activeCity","cityCardArr","setActiveC","pageContainer","pageName","cityCardBlock","map","item","idx","image_url","weatherContainer","leftBlock","headerLeftBlock","ChartJS","register","LineController","LinearScale","CategoryScale","BarElement","PointElement","LineElement","Legend","Tooltip","BarController","Forecast","city","setCity","labels","setLabels","tempLine","setTempLine","feelsLike","setFeelsLike","dewPoint","setDewPoint","useEffect","axios","get","JSON","parse","lat","lon","then","res","console","log","data","daily","getDateLabels","computeTempLine","computeFeelsLikeTemp","computeDewPoint","catch","err","alert","arr","labs","dt","toLocaleDateString","day","dew_point","datasets","label","borderColor","borderWidth","fill","backgroundColor","selectCity","onChange","e","target","value","chartContainer","options","responsive","plugins","legend","position","display","text","Statistics","Settings","App","setActiveCity","loader","setLoader","setCityCardArr","setCurrentWeather","setCurrentDate","setCurrentTime","currentDateTime","setCurrentDateTime","responce","getWeather","getCurrentTimeAndDate","time_24","date_time_wti","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b6a908f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Main_container__36XpQ\",\"pageContainer\":\"Main_pageContainer__96t2g\",\"pageName\":\"Main_pageName__2b_JE\",\"cityCardBlock\":\"Main_cityCardBlock__wKuDW\",\"weatherContainer\":\"Main_weatherContainer__1UaCZ\",\"leftBlock\":\"Main_leftBlock__jWic3\",\"headerLeftBlock\":\"Main_headerLeftBlock__3ISqe\",\"rightBlock\":\"Main_rightBlock__3t-tC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CardCity_card__2uKbN\",\"cardHeader\":\"CardCity_cardHeader__1D9jD\",\"headerImg\":\"CardCity_headerImg__3HKJN\",\"time\":\"CardCity_time__eYB0Y\",\"cityName\":\"CardCity_cityName__bGsjb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Forecast_container__2TooY\",\"pageContainer\":\"Forecast_pageContainer__18hL7\",\"pageName\":\"Forecast_pageName__2meT9\",\"selectCity\":\"Forecast_selectCity__1Oz2d\",\"chartContainer\":\"Forecast_chartContainer__1Bx9Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Header_headerContainer__3fDrX\",\"mainText\":\"Header_mainText__3kl-5\",\"asideText\":\"Header_asideText__1zjDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__2VC2S\",\"pageContainer\":\"Statistics_pageContainer__2nJt6\",\"pageName\":\"Statistics_pageName__2lepj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Settings_container__3zmsa\",\"pageContainer\":\"Settings_pageContainer__1Q0rM\",\"pageName\":\"Settings_pageName__1bIk_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawer\":\"Drawer_drawer__gBFtE\",\"drawerHeader\":\"Drawer_drawerHeader__2ahc8\",\"drawerBody\":\"Drawer_drawerBody__1tjZI\",\"drawerCurrentCard\":\"Drawer_drawerCurrentCard__2K9mx\",\"wrapper\":\"Drawer_wrapper__KGz8J\",\"cardHeader\":\"Drawer_cardHeader__1OUlX\",\"cardHeaderText\":\"Drawer_cardHeaderText__2O38x\",\"container\":\"Drawer_container__XoFhw\",\"currentTemp\":\"Drawer_currentTemp__30bbV\",\"currentCity\":\"Drawer_currentCity__2ICac\",\"currentState\":\"Drawer_currentState__1liO3\",\"currentHumidity\":\"Drawer_currentHumidity__3dBX3\",\"currentVisibility\":\"Drawer_currentVisibility__2eVVD\",\"currentWind\":\"Drawer_currentWind__n0jGj\",\"progressHumidity\":\"Drawer_progressHumidity__3H1yz\",\"progressVisibility\":\"Drawer_progressVisibility__1TqYv\"};","import styles from \"./Drawer.module.scss\"\r\nimport {Link} from \"react-router-dom\"\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nfunction Drawer({currentWeather, currentDate, currentTime}) {\r\n\r\n  return (\r\n    <div className={styles.drawer} >\r\n      <div className={styles.drawerHeader}>\r\n        <Link to={'/'}><i class=\"fas fa-cloud-sun-rain fa-2x\"></i><h2>React Weather</h2></Link>\r\n      </div>\r\n      <div className={styles.drawerBody}>\r\n        <ul>\r\n          <li> <Link to={'/'}><i class=\"fas fa-stream\"></i>Главная панель</Link> </li>\r\n          <li> <Link to={'/forecast'}><i class=\"fas fa-satellite-dish\"></i>Прогноз</Link></li>\r\n          <li> <Link to={'/statistics'}><i class=\"fas fa-atlas\"></i>Статистика региона</Link></li>\r\n          <li> <Link to={'/settings'}><i class=\"fas fa-cog\"></i>Настройки</Link> </li>\r\n        </ul>\r\n      </div>\r\n      {/* Карточка с текущей погодой для выбранного города */}\r\n      <div className={styles.drawerCurrentCard}>\r\n        <div className={styles.wrapper}>\r\n           <div className={styles.cardHeader}>\r\n              {currentWeather.weather && <img src={`img/openWeather/${currentWeather.weather[0].icon}@2x.png`} alt=\"Icon\" />}\r\n              <div className={styles.cardHeaderText}>\r\n                <p>Сегодня</p>\r\n                <p>{currentTime}</p>\r\n                <p>{currentDate}</p>\r\n              </div>\r\n            </div>\r\n        <div className={styles.container}>\r\n          {/* Текущая температура */}\r\n          <p className={styles.currentTemp}>{currentWeather.main.temp && `${(currentWeather.main.temp).toFixed(1)}\\u00B0C`}</p>\r\n          {/* Выбранный город */}\r\n          <p className={styles.currentCity}>{currentWeather.name}</p>\r\n          {/* Код страны */}\r\n          <p className={styles.currentState}>{currentWeather.sys.country}</p>\r\n\r\n          {/* =========== ВЛАЖНОСТЬ ============ */}\r\n          <div className={styles.currentHumidity}><p>Влажность</p><p>{currentWeather.main.humidity && `${(currentWeather.main.humidity).toFixed(1)}%`}</p></div>\r\n          <div className={styles.progressHumidity}><div style={{width: `${currentWeather.main.humidity}%`}}></div></div>\r\n\r\n          {/* ========== ОБЛАЧНОСТЬ ============ */}\r\n          <div className={styles.currentVisibility}>\r\n            <p>Облачность</p>\r\n            <p>{`${currentWeather.clouds.all}%`}</p>\r\n          </div>\r\n          <div className={styles.progressVisibility}><div style={{width: `${currentWeather.clouds.all}%`}}></div></div>\r\n\r\n          {/* ========== ВЕТЕР ============ */}\r\n          <div className={styles.currentWind}>\r\n            <p>Ветер</p>\r\n            <i class=\"fas fa-wind\"></i>\r\n            <p>{currentWeather.wind.speed && `${(currentWeather.wind.speed).toFixed(1)} м/с`}</p>\r\n          </div>\r\n\r\n           <Loader\r\n              type=\"ThreeDots\"\r\n              color=\"#6a58f3\"\r\n              height={40}\r\n              width={40}\r\n            />\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Drawer\r\n","import { useState } from \"react\"\r\nimport styles from \"./CardCity.module.scss\"\r\n\r\n\r\nfunction CardCity({title,titleEn, imageUrl, activeC, isActive, changeActiveCityMain, changeActiveCity}) {\r\n\r\n  const [active, setActive] = useState(isActive);\r\n\r\n  const toggleActive = (titleEn) => {\r\n    if(active){\r\n      setActive(!active);\r\n    }else{\r\n       setActive(!active);\r\n       changeActiveCity(titleEn);\r\n       changeActiveCityMain(titleEn);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.card} onClick={()=>{toggleActive(titleEn)}}>\r\n      <div className={styles.cardHeader}>\r\n          <img className={styles.headerImg} src={imageUrl} alt=\"icon\" />\r\n        <div className={styles.time}>\r\n          {activeC === titleEn ? <p style={{color: \"#6a58f3\"}}>&#x2705;</p> : <p>&#x274C;</p>}\r\n        </div>\r\n      </div>\r\n      {activeC === titleEn ? <p style={{color: \"#6a58f3\"}} className={styles.cityName}>{title}</p> : <p className={styles.cityName}>{title}</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardCity\r\n","import styles from \"./Header.module.scss\"\r\n\r\n\r\nfunction Header() {\r\n\r\n  const redirectOnGitHub = () => {\r\n    window.open(\"https://github.com/vitjaz?tab=repositories\");\r\n  }\r\n\r\n  return (\r\n    <div className={styles.headerContainer}>\r\n      <div className={styles.mainText}>\r\n        Made with 💖 in Saint-Petersburg &copy; 2021\r\n      </div>\r\n      <div onClick={redirectOnGitHub} className={styles.asideText}>\r\n        My GitHub\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import styles from \"./CurrentWeatherCard.module.scss\"\r\n\r\nfunction CurrentWeatherCard({currentWeather}) {\r\n\r\n  // вычисление направления ветра по метеорологическим градусам\r\n  function getCardinalDirection(angle) {\r\n      const directions = ['↑ Север', '↗ Северо-Восток', '→ Восток', '↘ Юго-Восток', '↓ Юг', '↙ Юго-Запад', '← Запад', '↖ Северо-Запад'];\r\n      return directions[Math.round(angle / 45) % 8];\r\n  }\r\n\r\n  function getTimeFromUnixTimestamp(unix){\r\n    let date = new Date(unix * 1000);\r\n    let hours = date.getHours();\r\n    let minutes = \"0\" + date.getMinutes();\r\n    let seconds = \"0\" + date.getSeconds();\r\n\r\n    return `${hours}:${minutes.substring(minutes.length-2)}:${seconds.substring(seconds.length-2)}`;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.leftSide}>\r\n        {/* Левая сторона */}\r\n        {currentWeather.weather && <img src={`img/openWeather/${currentWeather.weather[0].icon}@2x.png`} alt=\"Icon\" />}\r\n        {/* === Влажность === */}\r\n        <div className={styles.humidityContainer}>\r\n        <div className=\"humidity\">Влажность:</div>\r\n         <p>{currentWeather.main.humidity && `${(currentWeather.main.humidity).toFixed(1)}%`}</p>\r\n        </div>\r\n        <div className={styles.progressHumidity}><div style={{width: `${currentWeather.main.humidity}%`}}></div></div>\r\n      \r\n        {/* === Облачность ===*/}\r\n        <div className={styles.cloudsContainer}>\r\n        <div className=\"clouds\">Облачность:</div>\r\n         <p>{currentWeather.clouds.all && `${currentWeather.clouds.all}%`}</p>\r\n        </div>\r\n        <div className={styles.progressClouds}><div style={{width: `${currentWeather.clouds.all}%`}}></div></div>\r\n\r\n        {/* === Видимость ===*/}\r\n        <div className={styles.visibilityContainer}>\r\n        <div className=\"visibility\">Видимость</div>\r\n         <p>{`${Math.floor(currentWeather.visibility / 1000)} км`}</p>\r\n        </div>\r\n\r\n        {/* Ветер */}\r\n        <div className={styles.windContainer}>\r\n            <p>Ветер</p>\r\n            <p>{currentWeather.wind.speed && `${(currentWeather.wind.speed).toFixed(1)} м/с`}</p>\r\n        </div>\r\n        <div className={styles.directionContainer}>\r\n          <p>Направление ветра</p>\r\n          <p>{currentWeather.wind.deg && `${(getCardinalDirection(currentWeather.wind.deg))}`}</p>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      {/* Правая сторона */}\r\n      <div className={styles.rightSide}>\r\n        <div className={styles.currentTemp}>{`${(currentWeather.main.temp).toFixed(1)}\\u00B0C`}</div>\r\n        <div className={styles.appTemp}>{`Ощущается как ${(currentWeather.main.feels_like).toFixed(1)}\\u00B0C`}</div>\r\n        <div className={styles.sunriseContainer}>\r\n          <p>Рассвет</p>\r\n          <p>{`${getTimeFromUnixTimestamp(currentWeather.sys.sunrise)}`}</p>\r\n        </div>\r\n         <div className={styles.sunsetContainer}>\r\n          <p>Закат</p>\r\n          <p>{`${getTimeFromUnixTimestamp(currentWeather.sys.sunset)}`}</p>\r\n        </div>\r\n        <div className={styles.pressureContainer}>\r\n          <p>Давление</p>\r\n          <p>{`${(currentWeather.main.pressure * 0.75).toFixed(1)} мм.рт.ст`}</p> \r\n        </div>\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CurrentWeatherCard\r\n","import CardCity from \"../../components/CardCity\"\r\nimport Header from \"../../components/Header\"\r\nimport {useEffect, useState} from \"react\"\r\nimport CurrentWeatherCard from \"../../components/CurrentWeatherCard\"\r\n\r\n\r\nimport styles from \"./Main.module.scss\"\r\n\r\nfunction Main({activeCity, cityCardArr, currentWeather, changeActiveCity}) {\r\n\r\n\r\n  const [activeC, setActiveC] = useState(activeCity);\r\n  const changeActiveCityMain = (title) => {\r\n    setActiveC(title);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n       <Header />\r\n       <div className={styles.pageContainer}>\r\n            <h2 className={styles.pageName}>Главная панель</h2>\r\n          {/* ===== КАРТОЧКИ ====== */}\r\n          <div className={styles.cityCardBlock}>\r\n             {\r\n                  cityCardArr?.map(\r\n                 (item, idx) => {\r\n                   return <CardCity \r\n                    key={idx} \r\n                    title={item.title} \r\n                    titleEn={item.titleEn} \r\n                    imageUrl={item.image_url} \r\n                    activeC={activeC} \r\n                    isActive={item.title === activeC ? true : false} \r\n                    changeActiveCityMain={changeActiveCityMain} \r\n                    changeActiveCity={changeActiveCity}/>\r\n                 })\r\n             }\r\n          </div>\r\n\r\n          {/* ===== ПОДРОБНЫЕ ДАННЫЕ О ПОГОДЕ В ВЫБРАННОМ ГОРОДЕ ===== */}\r\n          <h2>Погода</h2>\r\n\r\n          <div className={styles.weatherContainer}>\r\n            <div className={styles.leftBlock}>\r\n              <h3 className={styles.headerLeftBlock}>\r\n                {`Последние наблюдения 1 час назад`}\r\n              </h3>\r\n\r\n              <CurrentWeatherCard currentWeather={currentWeather} />\r\n              \r\n            </div>\r\n          </div>\r\n       </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main\r\n","import Header from \"../../components/Header\"\r\nimport {useState, useEffect} from \"react\"\r\nimport axios from \"axios\";\r\nimport styles from \"./Forecast.module.scss\"\r\nimport {\r\n  Chart as ChartJS,\r\n  LinearScale,\r\n  CategoryScale,\r\n  BarElement,\r\n  PointElement,\r\n  LineElement,\r\n  Legend,\r\n  Tooltip,\r\n  LineController,\r\n  BarController\r\n} from 'chart.js';\r\nimport { Chart } from 'react-chartjs-2';\r\nChartJS.register(\r\n  LineController,\r\n  LinearScale,\r\n  CategoryScale,\r\n  BarElement,\r\n  PointElement,\r\n  LineElement,\r\n  Legend,\r\n  Tooltip,\r\n  BarController\r\n);\r\n\r\nfunction Forecast() {\r\n\r\n  const API_KEY = \"8459744fe826f74f3d531b5bfb2929de\";\r\n  const [city, setCity] = useState('{\"lat\": 51.507351, \"lon\":-0.127758}');\r\n  const [labels, setLabels] = useState([]);\r\n  const [tempLine, setTempLine] = useState([]);\r\n  const [feelsLike, setFeelsLike] = useState([]);\r\n  const [dewPoint, setDewPoint] = useState([]);\r\n\r\n  // запрашиваем прогноз при изменении выбранного города\r\n  useEffect(()=> {\r\n    axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${JSON.parse(city).lat}&lon=${JSON.parse(city).lon}&exclude=current,minutely,hourly,alerts&appid=${API_KEY}&units=metric`)\r\n      .then(res => {\r\n        console.log(res.data.daily);\r\n        getDateLabels(res.data.daily);\r\n        setTempLine(computeTempLine(res.data.daily));\r\n        setFeelsLike(computeFeelsLikeTemp(res.data.daily));\r\n        setDewPoint(computeDewPoint(res.data.daily));\r\n      }).catch(err => alert(err));\r\n  }, [city]);\r\n\r\n  // слушаем селект\r\n  const handleOnChange = (e)=> {\r\n    setCity(e.target.value);\r\n    console.log(city);\r\n  }\r\n\r\n   // получаем лейблы - даты\r\n  const getDateLabels = (arr) => {\r\n    const labs = arr.map(item => (new Date(item.dt * 1000).toLocaleDateString(\"ru-RU\")));\r\n    setLabels(labs);\r\n    console.log(labels);\r\n  }\r\n\r\n  // расчет для графика температуры\r\n  const computeTempLine = (res) => {\r\n      return res.map((item) => item.temp.day);\r\n  }\r\n\r\n  // расчет для графика температуры (ощущается как)\r\n  const computeFeelsLikeTemp = (res) => {\r\n      return res.map((item) => item.feels_like.day);\r\n  }\r\n\r\n  // расчет для графика температуры (ощущается как)\r\n  const computeDewPoint = (res) => {\r\n      return res.map((item) => item.dew_point);\r\n  }\r\n\r\n\r\n\r\n  // конфиг графика\r\n  const data = {\r\n  labels,\r\n  datasets: [\r\n    {\r\n      type: 'line',\r\n      label: `Температура C`,\r\n      borderColor: '#6a58f3',\r\n      borderWidth: 6,\r\n      fill: true,\r\n      data: tempLine,\r\n    },\r\n    {\r\n      type: 'bar',\r\n      label: 'Ощущается как C',\r\n      backgroundColor: 'rgb(75, 192, 192)',\r\n      data: feelsLike,\r\n      borderColor: 'white',\r\n      borderWidth: 2,\r\n    },\r\n    {\r\n      type: 'bar',\r\n      label: 'Точка росы',\r\n      backgroundColor: 'rgb(53, 162, 235)',\r\n      data: dewPoint,\r\n    },\r\n  ],\r\n}\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Chart.js Line Chart',\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Header />\r\n      <div className={styles.pageContainer}>\r\n        <h2 className={styles.pageName}>Прогноз в \r\n          <select className={styles.selectCity} onChange={handleOnChange}>\r\n            <option value='{\"lat\": 51.507351, \"lon\":-0.127758}'>Лондоне</option>\r\n            <option value='{\"lat\": 55.755825, \"lon\":37.617298}'>Москве</option>\r\n            <option value='{\"lat\": 40.712776, \"lon\":-74.005974}'>Нью-Йорке</option>\r\n            <option value='{\"lat\": 48.856613, \"lon\": 2.352222}'>Париже</option>\r\n            <option value='{\"lat\": 59.934280, \"lon\":30.335098}'>Санкт-Петербурге</option>\r\n          </select>\r\n        </h2>\r\n\r\n         <div className={styles.chartContainer}>\r\n           <Chart type='bar' options={options} data={data} />\r\n         </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Forecast\r\n","import Header from \"../../components/Header\"\r\nimport styles from \"./Statistics.module.scss\"\r\n\r\nfunction Statistics() {\r\n  return (\r\n     <div className={styles.container}>\r\n      <Header />\r\n      <div className={styles.pageContainer}>\r\n        <h2 className={styles.pageName}>В разработке</h2>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Statistics\r\n","import Header from \"../../components/Header\"\r\nimport styles from \"./Settings.module.scss\"\r\n\r\nfunction Settings() {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Header />\r\n      <div className={styles.pageContainer}>\r\n        <h2 className={styles.pageName}>В разработке</h2>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","import Drawer from \"./components/Drawer\"\r\nimport {Routes, Route} from \"react-router-dom\"\r\n\r\nimport {useState, useEffect} from \"react\"\r\nimport axios from \"axios\"\r\nimport Main from \"./pages/Main\"\r\nimport Forecast from \"./pages/Forecast\"\r\nimport Statistics from \"./pages/Statistics\"\r\nimport Settings from \"./pages/Settings\"\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nfunction App (){\r\n\r\n  // Глобальный стейт с активным городом на данный момент\r\n  const [activeCity, setActiveCity] = useState(\"London\");\r\n  const [loader, setLoader] = useState(true);\r\n  // массив городов\r\n  const [cityCardArr, setCityCardArr] = useState([]);\r\n  const [currentWeather, setCurrentWeather] = useState({\r\n  \"coord\": {\r\n    \"lon\": -122.08,\r\n    \"lat\": 37.39\r\n  },\r\n  \"weather\": [\r\n    {\r\n      \"id\": 800,\r\n      \"main\": \"Clear\",\r\n      \"description\": \"clear sky\",\r\n      \"icon\": \"01d\"\r\n    }\r\n  ],\r\n  \"base\": \"stations\",\r\n  \"main\": {\r\n    \"temp\": 282.55,\r\n    \"feels_like\": 281.86,\r\n    \"temp_min\": 280.37,\r\n    \"temp_max\": 284.26,\r\n    \"pressure\": 1023,\r\n    \"humidity\": 100\r\n  },\r\n  \"visibility\": 16093,\r\n  \"wind\": {\r\n    \"speed\": 1.5,\r\n    \"deg\": 350\r\n  },\r\n  \"clouds\": {\r\n    \"all\": 1\r\n  },\r\n  \"dt\": 1560350645,\r\n  \"sys\": {\r\n    \"type\": 1,\r\n    \"id\": 5122,\r\n    \"message\": 0.0139,\r\n    \"country\": \"US\",\r\n    \"sunrise\": 1560343627,\r\n    \"sunset\": 1560396563\r\n  },\r\n  \"timezone\": -25200,\r\n  \"id\": 420006353,\r\n  \"name\": \"Mountain View\",\r\n  \"cod\": 200\r\n  });\r\n  const [currentDate, setCurrentDate] = useState(\"\");\r\n  const [currentTime, setCurrentTime] = useState(\"\");\r\n  const [currentDateTime, setCurrentDateTime] = useState(\"\");\r\n\r\n  // ========== ПОЛУЧАЕМ ИНФОРМАЦИЮ О ГОРОДАХ 1 РАЗ ================\r\n  useEffect(()=>{\r\n    axios.get(\"https://mocki.io/v1/6ef5917c-9948-43ab-9cab-fc7d62a6b9c6\")\r\n      .then(responce => {\r\n        setCityCardArr(responce.data);\r\n        setLoader(false);\r\n        console.log(responce.data)})\r\n      .catch(err => alert(err));\r\n  }, []);\r\n\r\n\r\n  // Запросы к серверам при изменении активного города\r\n  useEffect(() => {\r\n    setLoader(true);\r\n    getWeather(activeCity);\r\n    getCurrentTimeAndDate(activeCity);\r\n  }, [activeCity]);\r\n\r\n  \r\n \r\n\r\n  // ============= ПОЛУЧЕНИЕ ДАТЫ/ВРЕМЕНИ В ВЫБРАННОМ ГОРОДЕ ================\r\n  const getCurrentTimeAndDate = (activeCity) => {\r\n    const API_KEY = \"890025aa3df54faeb484c73fc6dca97e\";\r\n    axios.get(`https://api.ipgeolocation.io/timezone?apiKey=${API_KEY}&location=${activeCity}`)\r\n    .then((responce) => {\r\n      setCurrentDate(responce.data.date);\r\n      setCurrentTime(responce.data.time_24);\r\n      setCurrentDateTime(responce.data.date_time_wti);\r\n      setLoader(false);\r\n      console.log(responce);})\r\n      .catch((err) => alert(err));\r\n\r\n  }\r\n\r\n  // ============== ПОЛУЧЕНИЕ ПОГОДЫ В ВЫБРАННОМ ГОРОДЕ =====================\r\n  const getWeather = (activeCity) => {\r\n    // open weather\r\n    const API_KEY = \"8459744fe826f74f3d531b5bfb2929de\";\r\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${activeCity}&appid=${API_KEY}&lang=ru&units=metric`)\r\n    .then(responce => {\r\n      setCurrentWeather(responce.data);\r\n      setLoader(false);\r\n      console.log(responce.data);\r\n    }).catch(err => alert(err));\r\n  }\r\n\r\n  const changeActiveCity = (title) => {\r\n    setActiveCity(title);\r\n  }\r\n\r\n  return(\r\n      <div className=\"container\">\r\n\r\n        {/* Индикатор загрузки данных */}\r\n        {loader && <Loader\r\n            className=\"loader\"\r\n            type=\"Puff\"\r\n            color=\"#6a58f3\"\r\n            height={200}\r\n            width={200}\r\n          />}\r\n\r\n        <div className=\"drawerContainer\">\r\n          <Drawer activeCity={activeCity} currentWeather={currentWeather} currentDate={currentDate} currentTime={currentTime}/>\r\n        </div>\r\n        \r\n\r\n        <div className=\"routesContainer\">\r\n          <Routes>\r\n            <Route exact path=\"/\" element={<Main activeCity={activeCity} cityCardArr={cityCardArr} currentWeather={currentWeather} currentDateTime={currentDateTime} changeActiveCity={changeActiveCity} />}></Route>\r\n            <Route path=\"/forecast\" element={<Forecast />}></Route>\r\n            <Route path=\"/statistics\" element={<Statistics />}></Route>\r\n            <Route path=\"/settings\" element={<Settings />}></Route>\r\n          </Routes>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport {BrowserRouter as Router} from \"react-router-dom\"\r\n\r\nimport App from \"./App\"\r\nimport \"./index.scss\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode> \r\n      <Router>\r\n        <App />\r\n      </Router>\r\n  </React.StrictMode>, document.getElementById(\"root\"));\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CurrentWeatherCard_container__2acu8\",\"leftSide\":\"CurrentWeatherCard_leftSide__3Z-UG\",\"icon\":\"CurrentWeatherCard_icon__3sjka\",\"humidityContainer\":\"CurrentWeatherCard_humidityContainer__w1hlG\",\"visibilityContainer\":\"CurrentWeatherCard_visibilityContainer__1cNXc\",\"cloudsContainer\":\"CurrentWeatherCard_cloudsContainer__3r3xY\",\"windContainer\":\"CurrentWeatherCard_windContainer__1qj1C\",\"directionContainer\":\"CurrentWeatherCard_directionContainer__2hiqT\",\"progressHumidity\":\"CurrentWeatherCard_progressHumidity__27-_e\",\"progressVisibility\":\"CurrentWeatherCard_progressVisibility__3lOaS\",\"progressClouds\":\"CurrentWeatherCard_progressClouds__2H0FU\",\"rightSide\":\"CurrentWeatherCard_rightSide__3JNC-\",\"currentTemp\":\"CurrentWeatherCard_currentTemp__3XAwY\",\"appTemp\":\"CurrentWeatherCard_appTemp__2DMKo\",\"sunriseContainer\":\"CurrentWeatherCard_sunriseContainer__3HNOk\",\"sunsetContainer\":\"CurrentWeatherCard_sunsetContainer__29FI-\",\"pressureContainer\":\"CurrentWeatherCard_pressureContainer__3_XWx\",\"UVContainer\":\"CurrentWeatherCard_UVContainer__2M7-k\"};"],"sourceRoot":""}